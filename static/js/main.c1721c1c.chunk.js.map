{"version":3,"sources":["SelectAutocomplete.js","countries.js","App.js","index.js"],"names":["SelectAutocomplete","_ref","countries","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","react_default","a","createElement","className","list","placeholder","value","onChange","e","target","id","map","country","label","type","onClick","code","phone","suggested","App","allCountries","setAllCountries","useEffect","regenerator_default","async","_context","prev","next","stop","length","src_SelectAutocomplete","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c1721c1c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SelectAutocomplete = ({ countries }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <div className=\"select__box\">\n      <input\n        list=\"countries\"\n        placeholder=\"Choose a country\"\n        className=\"select\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n      />\n      <datalist id=\"countries\">\n        {countries.map(country => (\n          <option value={country.label}>{country.label}</option>\n        ))}\n      </datalist>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => setInputValue('')}\n      >\n        X\n      </button>\n    </div>\n  );\n};\n\nSelectAutocomplete.propTypes = {\n  countries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default SelectAutocomplete;\n","export const countries = [\n  {\n    code: 'AD', label: 'Andorra', phone: '376',\n  },\n  {\n    code: 'AE', label: 'United Arab Emirates', phone: '971',\n  },\n  {\n    code: 'AF', label: 'Afghanistan', phone: '93',\n  },\n  {\n    code: 'AG', label: 'Antigua and Barbuda', phone: '1-268',\n  },\n  {\n    code: 'AI', label: 'Anguilla', phone: '1-264',\n  },\n  {\n    code: 'AL', label: 'Albania', phone: '355',\n  },\n  {\n    code: 'AM', label: 'Armenia', phone: '374',\n  },\n  {\n    code: 'AO', label: 'Angola', phone: '244',\n  },\n  {\n    code: 'BE', label: 'Belgium', phone: '32',\n  },\n  {\n    code: 'BF', label: 'Burkina Faso', phone: '226',\n  },\n  {\n    code: 'BG', label: 'Bulgaria', phone: '359',\n  },\n  {\n    code: 'BH', label: 'Bahrain', phone: '973',\n  },\n  {\n    code: 'CV', label: 'Cape Verde', phone: '238',\n  },\n  {\n    code: 'CW', label: 'Curacao', phone: '599',\n  },\n  {\n    code: 'CX', label: 'Christmas Island', phone: '61',\n  },\n  {\n    code: 'CY', label: 'Cyprus', phone: '357',\n  },\n  {\n    code: 'CZ', label: 'Czech Republic', phone: '420',\n  },\n  {\n    code: 'DE', label: 'Germany', phone: '49', suggested: true,\n  },\n  {\n    code: 'DJ', label: 'Djibouti', phone: '253',\n  },\n  {\n    code: 'GB', label: 'United Kingdom', phone: '44',\n  },\n  {\n    code: 'ID', label: 'Indonesia', phone: '62',\n  },\n  {\n    code: 'IE', label: 'Ireland', phone: '353',\n  },\n  {\n    code: 'IL', label: 'Israel', phone: '972',\n  },\n  {\n    code: 'IM', label: 'Isle of Man', phone: '44',\n  },\n  {\n    code: 'IN', label: 'India', phone: '91',\n  },\n  {\n    code: 'UA', label: 'Ukraine', phone: '380',\n  },\n  {\n    code: 'UG', label: 'Uganda', phone: '256',\n  },\n  {\n    code: 'US', label: 'United States', phone: '1', suggested: true,\n  },\n  {\n    code: 'UY', label: 'Uruguay', phone: '598',\n  },\n  {\n    code: 'UZ', label: 'Uzbekistan', phone: '998',\n  },\n  {\n    code: 'VA', label: 'Holy See (Vatican City State)', phone: '379',\n  },\n  {\n    code: 'VC', label: 'Saint Vincent and the Grenadines', phone: '1-784',\n  },\n  {\n    code: 'VE', label: 'Venezuela', phone: '58',\n  },\n  {\n    code: 'VG', label: 'British Virgin Islands', phone: '1-284',\n  },\n  {\n    code: 'VI', label: 'US Virgin Islands', phone: '1-340',\n  },\n  {\n    code: 'VN', label: 'Vietnam', phone: '84',\n  },\n  {\n    code: 'VU', label: 'Vanuatu', phone: '678',\n  },\n  {\n    code: 'WF', label: 'Wallis and Futuna', phone: '681',\n  },\n  {\n    code: 'WS', label: 'Samoa', phone: '685',\n  },\n  {\n    code: 'XK', label: 'Kosovo', phone: '383',\n  },\n  {\n    code: 'YE', label: 'Yemen', phone: '967',\n  },\n  {\n    code: 'YT', label: 'Mayotte', phone: '262',\n  },\n  {\n    code: 'ZA', label: 'South Africa', phone: '27',\n  },\n  {\n    code: 'ZM', label: 'Zambia', phone: '260',\n  },\n  {\n    code: 'ZW', label: 'Zimbabwe', phone: '263',\n  },\n];\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport SelectAutocomplete from './SelectAutocomplete';\nimport { countries } from './countries';\n\nfunction App() {\n  const [allCountries, setAllCountries] = useState([]);\n\n  useEffect(async() => {\n    setAllCountries(countries);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Select Autocomplete Component</h1>\n      <p>\n        Select one country of\n        {' '}\n        {allCountries.length}\n      </p>\n      <SelectAutocomplete countries={allCountries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}